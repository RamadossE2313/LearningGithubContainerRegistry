name: CI/CD Pipeline with MultiStage and Approvers

on:
  push:
    branches:
      - main
      - develop
      
  pull_request:
    branches:
      - main
      - develop

  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Generate Build Version
      - name: Generate Build Version
        id: build_version
        run: echo "BUILD_VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      # Step 3: Convert GitHub Actor to Lowercase
      - name: Convert GitHub Actor to Lowercase
        run: echo "actor=$(echo ${{ github.actor }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Step 4: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u ${{ env.actor }} --password-stdin

      # Step 5: Build Docker image with Build Version
      - name: Build Docker image
        if: github.event_name != 'pull_request'
        run: |
          docker build \
            -t ghcr.io/${{ env.actor }}/learning-github-container-registry-api:${{ env.BUILD_VERSION }} \
            -t ghcr.io/${{ env.actor }}/learning-github-container-registry-api:latest \
            .

      # Step 6: Push Docker images to GitHub Container Registry
      - name: Push Docker images
        if: github.event_name != 'pull_request'
        run: |
          docker push ghcr.io/${{ env.actor }}/learning-github-container-registry-api:${{ env.BUILD_VERSION }}
          docker push ghcr.io/${{ env.actor }}/learning-github-container-registry-api:latest

  # Deploy to Development Environment
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.event_name != 'pull_request' && github.ref_name == 'develop'
    environment: dev
    env:
      BUILD_VERSION: ${{ needs.build-and-publish.outputs.build_version }}
    steps:
      - name: Display Environment Info
        run: echo "Deploying to ${{ github.environment }} - ${{env.BUILD_VERSION}} environment..."

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure Subscription
        run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION }}

      - name: Update Azure Container App
        run: |
          az containerapp update \
            --name ${{ secrets.CONTAINER_APP }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --image ghcr.io/ramadosse2313/learning-github-container-registry-api:20250409171409 \
            --set registries="ghcr.io=${{ secrets.GHCR_USERNAME }}=${{ secrets.TOKEN }}"

  # Deploy to Test Environment
  deploy-test:
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.event_name != 'pull_request' && github.ref_name == 'main'
    environment: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Call Deployment Workflow for Test
        uses: ./.github/workflows/deployment.yml
        with:
          env: test
          build_version: ${{ env.BUILD_VERSION }}
          actor: ${{ env.actor }}

  # Deploy to Production Environment
  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-test
    if: github.event_name != 'pull_request'
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Call Deployment Workflow for Prod
        uses: ./.github/workflows/deployment.yml
        with:
          env: prod
          build_version: ${{ env.BUILD_VERSION }}
          actor: ${{ env.actor }}
