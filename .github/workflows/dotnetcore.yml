name: CI/CD Pipeline with MultiStage and Approvers

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    outputs:
      build_version: ${{ steps.build_version.outputs.build_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Build Version
        id: build_version
        run: |
          BUILD_VERSION=$(date +%Y%m%d%H%M%S)
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
          echo "build_version=$BUILD_VERSION" >> $GITHUB_OUTPUT

      - name: Convert GitHub Actor to Lowercase
        run: echo "actor=$(echo ${{ github.actor }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u ${{ env.actor }} --password-stdin

      - name: Build Docker image
        if: github.event_name != 'pull_request'
        run: |
          docker build \
          -t ghcr.io/${{ env.actor }}/learning-github-container-registry-api:${{ env.BUILD_VERSION }} \
          -t ghcr.io/${{ env.actor }}/learning-github-container-registry-api:latest \
          .

      - name: Push Docker images
        if: github.event_name != 'pull_request'
        run: |
          docker push ghcr.io/${{ env.actor }}/learning-github-container-registry-api:${{ env.BUILD_VERSION }}
          docker push ghcr.io/${{ env.actor }}/learning-github-container-registry-api:latest

  # ✅ Deploy to Development
  deploy-dev:
    needs: build-and-publish
    if: github.event_name != 'pull_request' && github.ref_name == 'develop'
    uses: ./.github/workflows/deploy.yml
    with:
      environment: dev
      build_version: ${{ needs.build-and-publish.outputs.build_version }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
      CONTAINER_APP: ${{ secrets.CONTAINER_APP }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
      TOKEN: ${{ secrets.TOKEN }}

  # ✅ Deploy to Test
  deploy-test:
    needs: build-and-publish
    if: github.event_name != 'pull_request' && github.ref_name == 'main'
    uses: ./.github/workflows/deploy.yml
    with:
      environment: test
      build_version: ${{ needs.build-and-publish.outputs.build_version }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
      CONTAINER_APP: ${{ secrets.CONTAINER_APP }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
      TOKEN: ${{ secrets.TOKEN }}

  # ✅ Deploy to Production
  deploy-prod:
    needs: deploy-test
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/deploy.yml
    with:
      environment: prod
      build_version: ${{ needs.build-and-publish.outputs.build_version }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
      CONTAINER_APP: ${{ secrets.CONTAINER_APP }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
      TOKEN: ${{ secrets.TOKEN }}
